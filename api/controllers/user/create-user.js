module.exports = { friendlyName: "Creates a new user", description: "Controller that handles request to create a new user", inputs: { email: { type: 'string', required: true }, name: { type: 'string', required: true }, password: { type: 'string', required: true } }, exits: { success: { responseType: 'jsonOk'}, jsonError: { responseType: 'jsonError' } }, fn: async function(inputs, exits) { let error = [], insertedUser = {}, simpleValidator = require('@suyashsumaroo/simple-validator'), validationElements = [], addedResponse = ''; try { validationElements = [{ type: simpleValidator.constants.type.string, value: inputs.email, name: 'Email', maxLength: 200, required: true, unique: true, isEmail: true }, { type: simpleValidator.constants.type.string, value: inputs.name, name: 'Name', maxLength: 200, required: true }, { type: simpleValidator.constants.type.string, value: inputs.password, name: 'Password', maxLength: 200, required: true }]; error = simpleValidator.validate(validationElements); if (error.length > 0) { return exits.jsonError(error); } else { insertedUser = { email: inputs.email, name: inputs.name, password: sails.helpers.passwords.hashPassword(inputs.password) }; addedResponse = await sails.models.user.create(insertedUser).fetch(); return exits.success({ data: addedResponse }); } } catch (e) { sails.log.debug('create-user.js : e'); sails.log.debug(e); error.push(await sails.helpers.utility.error.getAppError('general.invalid_parameters')); return exits.jsonError(error); } } };